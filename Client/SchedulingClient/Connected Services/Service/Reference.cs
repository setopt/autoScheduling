//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SchedulingClient.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string error_messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_User {
            get {
                return this.ID_UserField;
            }
            set {
                if ((this.ID_UserField.Equals(value) != true)) {
                    this.ID_UserField = value;
                    this.RaisePropertyChanged("ID_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string error_message {
            get {
                return this.error_messageField;
            }
            set {
                if ((object.ReferenceEquals(this.error_messageField, value) != true)) {
                    this.error_messageField = value;
                    this.RaisePropertyChanged("error_message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderTable", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class OrderTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Group_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Group_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberLessonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Subject_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group_name {
            get {
                return this.Group_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Group_nameField, value) != true)) {
                    this.Group_nameField = value;
                    this.RaisePropertyChanged("Group_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Group_number {
            get {
                return this.Group_numberField;
            }
            set {
                if ((this.Group_numberField.Equals(value) != true)) {
                    this.Group_numberField = value;
                    this.RaisePropertyChanged("Group_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Order {
            get {
                return this.ID_OrderField;
            }
            set {
                if ((this.ID_OrderField.Equals(value) != true)) {
                    this.ID_OrderField = value;
                    this.RaisePropertyChanged("ID_Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberLessons {
            get {
                return this.NumberLessonsField;
            }
            set {
                if ((this.NumberLessonsField.Equals(value) != true)) {
                    this.NumberLessonsField = value;
                    this.RaisePropertyChanged("NumberLessons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject_name {
            get {
                return this.Subject_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Subject_nameField, value) != true)) {
                    this.Subject_nameField = value;
                    this.RaisePropertyChanged("Subject_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_login {
            get {
                return this.User_loginField;
            }
            set {
                if ((object.ReferenceEquals(this.User_loginField, value) != true)) {
                    this.User_loginField = value;
                    this.RaisePropertyChanged("User_login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_name {
            get {
                return this.User_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.User_nameField, value) != true)) {
                    this.User_nameField = value;
                    this.RaisePropertyChanged("User_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Group_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberLessonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Subject_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Group_ID {
            get {
                return this.Group_IDField;
            }
            set {
                if ((this.Group_IDField.Equals(value) != true)) {
                    this.Group_IDField = value;
                    this.RaisePropertyChanged("Group_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Order {
            get {
                return this.ID_OrderField;
            }
            set {
                if ((this.ID_OrderField.Equals(value) != true)) {
                    this.ID_OrderField = value;
                    this.RaisePropertyChanged("ID_Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberLessons {
            get {
                return this.NumberLessonsField;
            }
            set {
                if ((this.NumberLessonsField.Equals(value) != true)) {
                    this.NumberLessonsField = value;
                    this.RaisePropertyChanged("NumberLessons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subject_ID {
            get {
                return this.Subject_IDField;
            }
            set {
                if ((this.Subject_IDField.Equals(value) != true)) {
                    this.Subject_IDField = value;
                    this.RaisePropertyChanged("Subject_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoominessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Room {
            get {
                return this.ID_RoomField;
            }
            set {
                if ((this.ID_RoomField.Equals(value) != true)) {
                    this.ID_RoomField = value;
                    this.RaisePropertyChanged("ID_Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Roominess {
            get {
                return this.RoominessField;
            }
            set {
                if ((this.RoominessField.Equals(value) != true)) {
                    this.RoominessField = value;
                    this.RaisePropertyChanged("Roominess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Couple", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Couple : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_CoupleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Couple {
            get {
                return this.ID_CoupleField;
            }
            set {
                if ((this.ID_CoupleField.Equals(value) != true)) {
                    this.ID_CoupleField = value;
                    this.RaisePropertyChanged("ID_Couple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Group {
            get {
                return this.ID_GroupField;
            }
            set {
                if ((this.ID_GroupField.Equals(value) != true)) {
                    this.ID_GroupField = value;
                    this.RaisePropertyChanged("ID_Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SheduleTable", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class SheduleTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Group_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_SheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumDemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Room_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Subject_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((this.DayOfWeekField.Equals(value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group_name {
            get {
                return this.Group_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Group_nameField, value) != true)) {
                    this.Group_nameField = value;
                    this.RaisePropertyChanged("Group_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Shedule {
            get {
                return this.ID_SheduleField;
            }
            set {
                if ((this.ID_SheduleField.Equals(value) != true)) {
                    this.ID_SheduleField = value;
                    this.RaisePropertyChanged("ID_Shedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumDem {
            get {
                return this.NumDemField;
            }
            set {
                if ((this.NumDemField.Equals(value) != true)) {
                    this.NumDemField = value;
                    this.RaisePropertyChanged("NumDem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room_number {
            get {
                return this.Room_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.Room_numberField, value) != true)) {
                    this.Room_numberField = value;
                    this.RaisePropertyChanged("Room_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject_name {
            get {
                return this.Subject_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Subject_nameField, value) != true)) {
                    this.Subject_nameField = value;
                    this.RaisePropertyChanged("Subject_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_name {
            get {
                return this.User_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.User_nameField, value) != true)) {
                    this.User_nameField = value;
                    this.RaisePropertyChanged("User_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shedule", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Shedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Couple_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_SheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NumDemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Order_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Room_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Couple_ID {
            get {
                return this.Couple_IDField;
            }
            set {
                if ((this.Couple_IDField.Equals(value) != true)) {
                    this.Couple_IDField = value;
                    this.RaisePropertyChanged("Couple_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((this.DayOfWeekField.Equals(value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Shedule {
            get {
                return this.ID_SheduleField;
            }
            set {
                if ((this.ID_SheduleField.Equals(value) != true)) {
                    this.ID_SheduleField = value;
                    this.RaisePropertyChanged("ID_Shedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NumDem {
            get {
                return this.NumDemField;
            }
            set {
                if ((this.NumDemField.Equals(value) != true)) {
                    this.NumDemField = value;
                    this.RaisePropertyChanged("NumDem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order_ID {
            get {
                return this.Order_IDField;
            }
            set {
                if ((this.Order_IDField.Equals(value) != true)) {
                    this.Order_IDField = value;
                    this.RaisePropertyChanged("Order_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Room_ID {
            get {
                return this.Room_IDField;
            }
            set {
                if ((this.Room_IDField.Equals(value) != true)) {
                    this.Room_IDField = value;
                    this.RaisePropertyChanged("Room_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Subject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ID_SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID_Subject {
            get {
                return this.ID_SubjectField;
            }
            set {
                if ((this.ID_SubjectField.Equals(value) != true)) {
                    this.ID_SubjectField = value;
                    this.RaisePropertyChanged("ID_Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authentication", Namespace="http://schemas.datacontract.org/2004/07/SchedulingService")]
    [System.SerializableAttribute()]
    public partial class Authentication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string error_messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool error {
            get {
                return this.errorField;
            }
            set {
                if ((this.errorField.Equals(value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string error_message {
            get {
                return this.error_messageField;
            }
            set {
                if ((object.ReferenceEquals(this.error_messageField, value) != true)) {
                    this.error_messageField = value;
                    this.RaisePropertyChanged("error_message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        SchedulingClient.Service.User AddUser(SchedulingClient.Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.User> AddUserAsync(SchedulingClient.Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUser", ReplyAction="http://tempuri.org/IService1/SelectUserResponse")]
        SchedulingClient.Service.User[] SelectUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUser", ReplyAction="http://tempuri.org/IService1/SelectUserResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.User[]> SelectUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        void UpdateUser(SchedulingClient.Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(SchedulingClient.Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDUser", ReplyAction="http://tempuri.org/IService1/FindByIDUserResponse")]
        SchedulingClient.Service.User FindByIDUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDUser", ReplyAction="http://tempuri.org/IService1/FindByIDUserResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.User> FindByIDUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OrderTable", ReplyAction="http://tempuri.org/IService1/OrderTableResponse")]
        SchedulingClient.Service.OrderTable[] OrderTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OrderTable", ReplyAction="http://tempuri.org/IService1/OrderTableResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.OrderTable[]> OrderTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrder", ReplyAction="http://tempuri.org/IService1/DeleteOrderResponse")]
        void DeleteOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteOrder", ReplyAction="http://tempuri.org/IService1/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        SchedulingClient.Service.Order AddOrder(SchedulingClient.Service.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Order> AddOrderAsync(SchedulingClient.Service.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOrder", ReplyAction="http://tempuri.org/IService1/UpdateOrderResponse")]
        void UpdateOrder(SchedulingClient.Service.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOrder", ReplyAction="http://tempuri.org/IService1/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(SchedulingClient.Service.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDOrder", ReplyAction="http://tempuri.org/IService1/FindByIDOrderResponse")]
        SchedulingClient.Service.Order FindByIDOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDOrder", ReplyAction="http://tempuri.org/IService1/FindByIDOrderResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Order> FindByIDOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRoom", ReplyAction="http://tempuri.org/IService1/SelectRoomResponse")]
        SchedulingClient.Service.Room[] SelectRoom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRoom", ReplyAction="http://tempuri.org/IService1/SelectRoomResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Room[]> SelectRoomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRoom", ReplyAction="http://tempuri.org/IService1/AddRoomResponse")]
        SchedulingClient.Service.Room AddRoom(SchedulingClient.Service.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddRoom", ReplyAction="http://tempuri.org/IService1/AddRoomResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Room> AddRoomAsync(SchedulingClient.Service.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRoom", ReplyAction="http://tempuri.org/IService1/UpdateRoomResponse")]
        void UpdateRoom(SchedulingClient.Service.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRoom", ReplyAction="http://tempuri.org/IService1/UpdateRoomResponse")]
        System.Threading.Tasks.Task UpdateRoomAsync(SchedulingClient.Service.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRoom", ReplyAction="http://tempuri.org/IService1/DeleteRoomResponse")]
        void DeleteRoom(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRoom", ReplyAction="http://tempuri.org/IService1/DeleteRoomResponse")]
        System.Threading.Tasks.Task DeleteRoomAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDRoom", ReplyAction="http://tempuri.org/IService1/FindByIDRoomResponse")]
        SchedulingClient.Service.Room FindByIDRoom(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDRoom", ReplyAction="http://tempuri.org/IService1/FindByIDRoomResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Room> FindByIDRoomAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCouple", ReplyAction="http://tempuri.org/IService1/SelectCoupleResponse")]
        SchedulingClient.Service.Couple[] SelectCouple();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCouple", ReplyAction="http://tempuri.org/IService1/SelectCoupleResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Couple[]> SelectCoupleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCouple", ReplyAction="http://tempuri.org/IService1/AddCoupleResponse")]
        SchedulingClient.Service.Couple AddCouple(SchedulingClient.Service.Couple couple);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCouple", ReplyAction="http://tempuri.org/IService1/AddCoupleResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Couple> AddCoupleAsync(SchedulingClient.Service.Couple couple);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCouple", ReplyAction="http://tempuri.org/IService1/UpdateCoupleResponse")]
        void UpdateCouple(SchedulingClient.Service.Couple couple);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCouple", ReplyAction="http://tempuri.org/IService1/UpdateCoupleResponse")]
        System.Threading.Tasks.Task UpdateCoupleAsync(SchedulingClient.Service.Couple couple);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCouple", ReplyAction="http://tempuri.org/IService1/DeleteCoupleResponse")]
        void DeleteCouple(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCouple", ReplyAction="http://tempuri.org/IService1/DeleteCoupleResponse")]
        System.Threading.Tasks.Task DeleteCoupleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDCouple", ReplyAction="http://tempuri.org/IService1/FindByIDCoupleResponse")]
        SchedulingClient.Service.Couple FindByIDCouple(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDCouple", ReplyAction="http://tempuri.org/IService1/FindByIDCoupleResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Couple> FindByIDCoupleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectGroup", ReplyAction="http://tempuri.org/IService1/SelectGroupResponse")]
        SchedulingClient.Service.Group[] SelectGroup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectGroup", ReplyAction="http://tempuri.org/IService1/SelectGroupResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Group[]> SelectGroupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGroup", ReplyAction="http://tempuri.org/IService1/AddGroupResponse")]
        SchedulingClient.Service.Group AddGroup(SchedulingClient.Service.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGroup", ReplyAction="http://tempuri.org/IService1/AddGroupResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Group> AddGroupAsync(SchedulingClient.Service.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGroup", ReplyAction="http://tempuri.org/IService1/UpdateGroupResponse")]
        void UpdateGroup(SchedulingClient.Service.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGroup", ReplyAction="http://tempuri.org/IService1/UpdateGroupResponse")]
        System.Threading.Tasks.Task UpdateGroupAsync(SchedulingClient.Service.Group group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGroup", ReplyAction="http://tempuri.org/IService1/DeleteGroupResponse")]
        void DeleteGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteGroup", ReplyAction="http://tempuri.org/IService1/DeleteGroupResponse")]
        System.Threading.Tasks.Task DeleteGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDGroup", ReplyAction="http://tempuri.org/IService1/FindByIDGroupResponse")]
        SchedulingClient.Service.Group FindByIDGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDGroup", ReplyAction="http://tempuri.org/IService1/FindByIDGroupResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Group> FindByIDGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SheduleTable", ReplyAction="http://tempuri.org/IService1/SheduleTableResponse")]
        SchedulingClient.Service.SheduleTable[] SheduleTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SheduleTable", ReplyAction="http://tempuri.org/IService1/SheduleTableResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.SheduleTable[]> SheduleTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddShedule", ReplyAction="http://tempuri.org/IService1/AddSheduleResponse")]
        SchedulingClient.Service.Shedule AddShedule(SchedulingClient.Service.Shedule shedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddShedule", ReplyAction="http://tempuri.org/IService1/AddSheduleResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Shedule> AddSheduleAsync(SchedulingClient.Service.Shedule shedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateShedule", ReplyAction="http://tempuri.org/IService1/UpdateSheduleResponse")]
        void UpdateShedule(SchedulingClient.Service.Shedule shedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateShedule", ReplyAction="http://tempuri.org/IService1/UpdateSheduleResponse")]
        System.Threading.Tasks.Task UpdateSheduleAsync(SchedulingClient.Service.Shedule shedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteShedule", ReplyAction="http://tempuri.org/IService1/DeleteSheduleResponse")]
        void DeleteShedule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteShedule", ReplyAction="http://tempuri.org/IService1/DeleteSheduleResponse")]
        System.Threading.Tasks.Task DeleteSheduleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDShedule", ReplyAction="http://tempuri.org/IService1/FindByIDSheduleResponse")]
        SchedulingClient.Service.Shedule FindByIDShedule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDShedule", ReplyAction="http://tempuri.org/IService1/FindByIDSheduleResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Shedule> FindByIDSheduleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectSubject", ReplyAction="http://tempuri.org/IService1/SelectSubjectResponse")]
        SchedulingClient.Service.Subject[] SelectSubject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectSubject", ReplyAction="http://tempuri.org/IService1/SelectSubjectResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Subject[]> SelectSubjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSubject", ReplyAction="http://tempuri.org/IService1/AddSubjectResponse")]
        SchedulingClient.Service.Subject AddSubject(SchedulingClient.Service.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSubject", ReplyAction="http://tempuri.org/IService1/AddSubjectResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Subject> AddSubjectAsync(SchedulingClient.Service.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSubject", ReplyAction="http://tempuri.org/IService1/UpdateSubjectResponse")]
        void UpdateSubject(SchedulingClient.Service.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSubject", ReplyAction="http://tempuri.org/IService1/UpdateSubjectResponse")]
        System.Threading.Tasks.Task UpdateSubjectAsync(SchedulingClient.Service.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSubject", ReplyAction="http://tempuri.org/IService1/DeleteSubjectResponse")]
        void DeleteSubject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSubject", ReplyAction="http://tempuri.org/IService1/DeleteSubjectResponse")]
        System.Threading.Tasks.Task DeleteSubjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDSubject", ReplyAction="http://tempuri.org/IService1/FindByIDSubjectResponse")]
        SchedulingClient.Service.Subject FindByIDSubject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindByIDSubject", ReplyAction="http://tempuri.org/IService1/FindByIDSubjectResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Subject> FindByIDSubjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authentication", ReplyAction="http://tempuri.org/IService1/AuthenticationResponse")]
        SchedulingClient.Service.Authentication Authentication(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Authentication", ReplyAction="http://tempuri.org/IService1/AuthenticationResponse")]
        System.Threading.Tasks.Task<SchedulingClient.Service.Authentication> AuthenticationAsync(string login, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SchedulingClient.Service.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SchedulingClient.Service.IService1>, SchedulingClient.Service.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SchedulingClient.Service.User AddUser(SchedulingClient.Service.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.User> AddUserAsync(SchedulingClient.Service.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public SchedulingClient.Service.User[] SelectUser() {
            return base.Channel.SelectUser();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.User[]> SelectUserAsync() {
            return base.Channel.SelectUserAsync();
        }
        
        public void UpdateUser(SchedulingClient.Service.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(SchedulingClient.Service.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public SchedulingClient.Service.User FindByIDUser(int id) {
            return base.Channel.FindByIDUser(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.User> FindByIDUserAsync(int id) {
            return base.Channel.FindByIDUserAsync(id);
        }
        
        public SchedulingClient.Service.OrderTable[] OrderTable() {
            return base.Channel.OrderTable();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.OrderTable[]> OrderTableAsync() {
            return base.Channel.OrderTableAsync();
        }
        
        public void DeleteOrder(int id) {
            base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(int id) {
            return base.Channel.DeleteOrderAsync(id);
        }
        
        public SchedulingClient.Service.Order AddOrder(SchedulingClient.Service.Order order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Order> AddOrderAsync(SchedulingClient.Service.Order order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public void UpdateOrder(SchedulingClient.Service.Order order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(SchedulingClient.Service.Order order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public SchedulingClient.Service.Order FindByIDOrder(int id) {
            return base.Channel.FindByIDOrder(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Order> FindByIDOrderAsync(int id) {
            return base.Channel.FindByIDOrderAsync(id);
        }
        
        public SchedulingClient.Service.Room[] SelectRoom() {
            return base.Channel.SelectRoom();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Room[]> SelectRoomAsync() {
            return base.Channel.SelectRoomAsync();
        }
        
        public SchedulingClient.Service.Room AddRoom(SchedulingClient.Service.Room room) {
            return base.Channel.AddRoom(room);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Room> AddRoomAsync(SchedulingClient.Service.Room room) {
            return base.Channel.AddRoomAsync(room);
        }
        
        public void UpdateRoom(SchedulingClient.Service.Room room) {
            base.Channel.UpdateRoom(room);
        }
        
        public System.Threading.Tasks.Task UpdateRoomAsync(SchedulingClient.Service.Room room) {
            return base.Channel.UpdateRoomAsync(room);
        }
        
        public void DeleteRoom(int id) {
            base.Channel.DeleteRoom(id);
        }
        
        public System.Threading.Tasks.Task DeleteRoomAsync(int id) {
            return base.Channel.DeleteRoomAsync(id);
        }
        
        public SchedulingClient.Service.Room FindByIDRoom(int id) {
            return base.Channel.FindByIDRoom(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Room> FindByIDRoomAsync(int id) {
            return base.Channel.FindByIDRoomAsync(id);
        }
        
        public SchedulingClient.Service.Couple[] SelectCouple() {
            return base.Channel.SelectCouple();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Couple[]> SelectCoupleAsync() {
            return base.Channel.SelectCoupleAsync();
        }
        
        public SchedulingClient.Service.Couple AddCouple(SchedulingClient.Service.Couple couple) {
            return base.Channel.AddCouple(couple);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Couple> AddCoupleAsync(SchedulingClient.Service.Couple couple) {
            return base.Channel.AddCoupleAsync(couple);
        }
        
        public void UpdateCouple(SchedulingClient.Service.Couple couple) {
            base.Channel.UpdateCouple(couple);
        }
        
        public System.Threading.Tasks.Task UpdateCoupleAsync(SchedulingClient.Service.Couple couple) {
            return base.Channel.UpdateCoupleAsync(couple);
        }
        
        public void DeleteCouple(int id) {
            base.Channel.DeleteCouple(id);
        }
        
        public System.Threading.Tasks.Task DeleteCoupleAsync(int id) {
            return base.Channel.DeleteCoupleAsync(id);
        }
        
        public SchedulingClient.Service.Couple FindByIDCouple(int id) {
            return base.Channel.FindByIDCouple(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Couple> FindByIDCoupleAsync(int id) {
            return base.Channel.FindByIDCoupleAsync(id);
        }
        
        public SchedulingClient.Service.Group[] SelectGroup() {
            return base.Channel.SelectGroup();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Group[]> SelectGroupAsync() {
            return base.Channel.SelectGroupAsync();
        }
        
        public SchedulingClient.Service.Group AddGroup(SchedulingClient.Service.Group group) {
            return base.Channel.AddGroup(group);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Group> AddGroupAsync(SchedulingClient.Service.Group group) {
            return base.Channel.AddGroupAsync(group);
        }
        
        public void UpdateGroup(SchedulingClient.Service.Group group) {
            base.Channel.UpdateGroup(group);
        }
        
        public System.Threading.Tasks.Task UpdateGroupAsync(SchedulingClient.Service.Group group) {
            return base.Channel.UpdateGroupAsync(group);
        }
        
        public void DeleteGroup(int id) {
            base.Channel.DeleteGroup(id);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(int id) {
            return base.Channel.DeleteGroupAsync(id);
        }
        
        public SchedulingClient.Service.Group FindByIDGroup(int id) {
            return base.Channel.FindByIDGroup(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Group> FindByIDGroupAsync(int id) {
            return base.Channel.FindByIDGroupAsync(id);
        }
        
        public SchedulingClient.Service.SheduleTable[] SheduleTable() {
            return base.Channel.SheduleTable();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.SheduleTable[]> SheduleTableAsync() {
            return base.Channel.SheduleTableAsync();
        }
        
        public SchedulingClient.Service.Shedule AddShedule(SchedulingClient.Service.Shedule shedule) {
            return base.Channel.AddShedule(shedule);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Shedule> AddSheduleAsync(SchedulingClient.Service.Shedule shedule) {
            return base.Channel.AddSheduleAsync(shedule);
        }
        
        public void UpdateShedule(SchedulingClient.Service.Shedule shedule) {
            base.Channel.UpdateShedule(shedule);
        }
        
        public System.Threading.Tasks.Task UpdateSheduleAsync(SchedulingClient.Service.Shedule shedule) {
            return base.Channel.UpdateSheduleAsync(shedule);
        }
        
        public void DeleteShedule(int id) {
            base.Channel.DeleteShedule(id);
        }
        
        public System.Threading.Tasks.Task DeleteSheduleAsync(int id) {
            return base.Channel.DeleteSheduleAsync(id);
        }
        
        public SchedulingClient.Service.Shedule FindByIDShedule(int id) {
            return base.Channel.FindByIDShedule(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Shedule> FindByIDSheduleAsync(int id) {
            return base.Channel.FindByIDSheduleAsync(id);
        }
        
        public SchedulingClient.Service.Subject[] SelectSubject() {
            return base.Channel.SelectSubject();
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Subject[]> SelectSubjectAsync() {
            return base.Channel.SelectSubjectAsync();
        }
        
        public SchedulingClient.Service.Subject AddSubject(SchedulingClient.Service.Subject subject) {
            return base.Channel.AddSubject(subject);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Subject> AddSubjectAsync(SchedulingClient.Service.Subject subject) {
            return base.Channel.AddSubjectAsync(subject);
        }
        
        public void UpdateSubject(SchedulingClient.Service.Subject subject) {
            base.Channel.UpdateSubject(subject);
        }
        
        public System.Threading.Tasks.Task UpdateSubjectAsync(SchedulingClient.Service.Subject subject) {
            return base.Channel.UpdateSubjectAsync(subject);
        }
        
        public void DeleteSubject(int id) {
            base.Channel.DeleteSubject(id);
        }
        
        public System.Threading.Tasks.Task DeleteSubjectAsync(int id) {
            return base.Channel.DeleteSubjectAsync(id);
        }
        
        public SchedulingClient.Service.Subject FindByIDSubject(int id) {
            return base.Channel.FindByIDSubject(id);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Subject> FindByIDSubjectAsync(int id) {
            return base.Channel.FindByIDSubjectAsync(id);
        }
        
        public SchedulingClient.Service.Authentication Authentication(string login, string password) {
            return base.Channel.Authentication(login, password);
        }
        
        public System.Threading.Tasks.Task<SchedulingClient.Service.Authentication> AuthenticationAsync(string login, string password) {
            return base.Channel.AuthenticationAsync(login, password);
        }
    }
}
